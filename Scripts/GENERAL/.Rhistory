sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- (1 + rf) ^ Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
alpha <- (V + M^2 + 1) / (2 * M)
u <- alpha + sqrt(alpha^2 - 1)  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- (V + (M - d) * (M - 1)) / ((u - d) * (u - 1))
p. <- p*u/M
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/(1+rf)^tau)*pbinom(a,n,1-p)
call
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- log(1 + rf)*Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
u <- exp( sigma * sqrt(Dt) )  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- 0.5*( 1 + M / log(u))
p. <- p*u/exp(M)
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/exp(rf*tau))*pbinom(a,n,1-p)
call
p
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- log(1 + rf)*Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
u <- exp( sigma * sqrt(Dt) )  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- 0.5*( 1 + M / log(u))
p. <- p*u/M
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/exp(rf*tau))*pbinom(a,n,1-p)
call
p*u/M
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- log(1 + rf)*Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
u <- exp( sigma * sqrt(Dt) )  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- 0.5*( 1 + M / log(u))
p. <- p*u/exp(M)
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/exp(rf*tau))*pbinom(a,n,1-p)
call
(0.5*(n+log(St/k)/(2*log(u))))
0.5*(n+log(St/k)/(2*log(u)))
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- log(1 + rf)*Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
u <- exp( sigma * sqrt(Dt) )  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- 0.5*( 1 + M / log(u))
p. <- p*u/exp(M)
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/exp(rf*tau))*pbinom(a,n,1-p)
call
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- log(1 + rf)*Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
u <- exp( sigma * sqrt(Dt) )  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- 0.5*( 1 + M / log(u))
p. <- p*u/exp(M)
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/exp(rf*tau))*pbinom(a,n,1-p)
call
p
1-p
M
V
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Cálculos del árbol binomial
Dt <- tau / n  # Tamaño de cada paso en el tiempo
# Cálculos intermedios para el árbol binomial
M <- log(1 + rf)*Dt  # Factor de crecimiento de la acción con tasa libre de riesgo
V <- sigma^2 * Dt  # Varianza del cambio de precio
# Cálculos del modelo binomial
u <- exp( sigma * sqrt(Dt) )  # Factor de subida
d <- 1 / u  # Factor de bajada
#Encontrando las probabilidades neutrales al riesgo
p <- 0.5*( 1 + M / log(u))
p. <- p*u/exp(M)
a <- round (0.5*(n+log(St/k)/(2*log(u))))
call <- St*pbinom(a,n,1-p.)-(k/exp(rf*tau))*pbinom(a,n,1-p)
call
p
1-p
V
Dt
u
1 / u
p
p.
1-p.
1-p
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Determinando Delta de t y omega
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
# Determinando M y V
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
# Determinando Zetas
Zeta_1 <- sqrt((Omega - 1) * (Omega + 2) * (Omega^2 + Omega + 2))
# Factores de crecimiento, decrecimiento y h
h <- M * Omega
u <- (h / 2) * ((Omega + 1) * Omega + Zeta_1)
d <- (h / 2) * ((Omega + 1) * Omega - Zeta_1)
# Determinando las probabilidades neutrales al riesgo
p_1 <- d / ((u + h) * (Omega + 2) * Omega)
p_2 <- (Omega + 1) / (Omega * (Omega + 2))
p_3 <- u / ((h + d) * (Omega + 2) * Omega)
# Determinando b, p estrellas y thetas
b <- (n * log(u) + log(St / k)) / (log(u / d))
p1_est <- (p_1 * u) / (exp(rf * Delta))
p2_est <- (p_2 * h) / (exp(rf * Delta))
p3_est <- (p_3 * d) / (exp(rf * Delta))
theta_2 <- p_2 / (p_1 + p_2)
theta2_est <- p2_est / (p1_est + p2_est)
# Calcular el precio de la call
Termino1 <- 0
Termino2 <- 0
for (x in 0:floor(b)) {
Termino1 <- Termino1 + choose(n, x) * (p3_est)^x * (p1_est + p2_est)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2_est)
}
for (x in 0:floor(b)) {
Termino2 <- Termino2 + choose(n, x) * (p_3)^x * (p_1 + p_2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta_2)
}
Precio <- St * Termino1 - (k / exp(rf * tau)) * Termino2
# Lista con resultados
Lista <- list(Probs = c(p_1, p_2, p_3), Precio = Precio, Factores = c(u, h, d), Metodo = "Trinomial-Tian 1")
# Mostrar resultados
Lista
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Determinando Delta de t y omega
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
# Determinando M y V
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
# Determinando Zetas
Zeta_1 <- sqrt((Omega - 1) * (Omega + 2) * (Omega^2 + Omega + 2))
# Factores de crecimiento, decrecimiento y h
h <- M * Omega
u <- (h / 2) * ((Omega + 1) * Omega + Zeta_1)
d <- (h / 2) * ((Omega + 1) * Omega - Zeta_1)
# Determinando las probabilidades neutrales al riesgo
p1 <- d / ((u + h) * (Omega + 2) * Omega)
p2 <- (Omega + 1) / (Omega * (Omega + 2))
p3 <- u / ((h + d) * (Omega + 2) * Omega)
# Determinando b, p estrellas y thetas
b <- (n * log(u) + log(St / k)) / (log(u / d))
p1.t <- (p1 * u) / (exp(rf * Delta))
p2.t <- (p2 * h) / (exp(rf * Delta))
p3.t <- (p3 * d) / (exp(rf * Delta))
theta2 <- p2 / (p1 + p2)
theta2.t <- p2.t / (p1.t + p2.t)
# Calcular el precio de la call
x <- 0
y <- 0
for (x in 0:round(b)) {
x <- x + choose(n, x) * (p3.t)^x * (p1.t + p2.t)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2.t)
}
for (x in 0:round(b)) {
y <- y + choose(n, x) * (p3)^x * (p1 + p2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2)
}
C <- St * Termino1 - (k / exp(rf * tau)) * Termino2
# Mostrar resultados
p1
p2
p3
C
u
h
f
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
Zeta_1 <- sqrt((Omega - 1) * (Omega + 3) )
h <- M * Omega
u <- (h / 2) * ((Omega + 1) * Omega + Zeta_1)
d <- (h / 2) * ((Omega + 1) * Omega - Zeta_1)
p1 <- d / ((u + h) * (Omega + 2) * Omega)
p2 <- (Omega + 1) / (Omega * (Omega + 2))
p3 <- u / ((h + d) * (Omega + 2) * Omega)
b <- (n * log(u) + log(St / k)) / (log(u / d))
p1.t <- (p1 * u) / (exp(rf * Delta))
p2.t <- (p2 * h) / (exp(rf * Delta))
p3.t <- (p3 * d) / (exp(rf * Delta))
theta2 <- p2 / (p1 + p2)
theta2.t <- p2.t / (p1.t + p2.t)
x <- 0
y <- 0
for (x in 0:round(b)) {
x <- x + choose(n, x) * (p3.t)^x * (p1.t + p2.t)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2.t)
}
for (x in 0:round(b)) {
y <- y + choose(n, x) * (p3)^x * (p1 + p2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2)
}
C <- St * Termino1 - (k / exp(rf * tau)) * Termino2
# Mostrar resultados
p1
p2
p3
C
u
h
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
Zeta_1 <- sqrt((Omega - 1) * (Omega + 3) * (Omega^2 + Omega + 2))
h <- M * Omega
u <- (h / 2) * ((Omega + 1) * Omega + Zeta_1)
d <- (h / 2) * ((Omega + 1) * Omega - Zeta_1)
p1 <- d / ((u + h) * (Omega + 2) * Omega)
p2 <- (Omega + 1) / (Omega * (Omega + 2))
p3 <- u / ((h + d) * (Omega + 2) * Omega)
b <- (n * log(u) + log(St / k)) / (log(u / d))
p1.t <- (p1 * u) / (exp(rf * Delta))
p2.t <- (p2 * h) / (exp(rf * Delta))
p3.t <- (p3 * d) / (exp(rf * Delta))
theta2 <- p2 / (p1 + p2)
theta2.t <- p2.t / (p1.t + p2.t)
x <- 0
y <- 0
for (x in 0:round(b)) {
x <- x + choose(n, x) * (p3.t)^x * (p1.t + p2.t)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2.t)
}
for (x in 0:round(b)) {
y <- y + choose(n, x) * (p3)^x * (p1 + p2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2)
}
C <- St * Termino1 - (k / exp(rf * tau)) * Termino2
# Mostrar resultados
p1
p2
p3
C
u
h
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Determinando Delta de t y omega
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
# Determinando M y V
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
# Determinando Zetas
Zeta_2 <- sqrt((Omega^2 - 1) * (Omega + 2 * sqrt(Omega) + 3))
# Factores de crecimiento, decrecimiento y h
h <- M * Omega * sqrt(Omega)
u <- (h / 2) * ((Omega + 1) * (sqrt(Omega) + 1) - 2 + Zeta_2)
d <- (h / 2) * ((Omega + 1) * (sqrt(Omega) + 1) - 2 - Zeta_2)
# Determinando las probabilidades neutrales al riesgo
alpha <- 1 / (h - M * Omega)
p_1 <- ((Omega + sqrt(Omega) + 1) * d - M * Omega) / ((u - d) * (u - h) * Omega * alpha)
p_2 <- ((sqrt(Omega) + 1)^2) / (Omega^2 * (Omega + 2 * sqrt(Omega) + 3))
p_3 <- ((Omega + sqrt(Omega) + 1) * u - M * Omega) / ((u - d) * (h - d) * Omega * alpha)
# Determinando b, p estrellas y thetas
b <- floor((n * log(u) + log(St / k)) / (log(u / d)))
p1_est <- (p_1 * u) / (exp(rf * Delta))
p2_est <- (p_2 * h) / (exp(rf * Delta))
p3_est <- (p_3 * d) / (exp(rf * Delta))
theta_2 <- p_2 / (p_1 + p_2)
theta2_est <- p2_est / (p1_est + p2_est)
# Calcular el precio de la call
Termino1 <- 0
Termino2 <- 0
for (x in 0:floor(b)) {
Termino1 <- Termino1 + choose(n, x) * (p3_est)^x * (p1_est + p2_est)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2_est)
}
for (x in 0:floor(b)) {
Termino2 <- Termino2 + choose(n, x) * (p_3)^x * (p_1 + p_2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta_2)
}
Precio <- St * Termino1 - (k / exp(rf * tau)) * Termino2
# Lista con resultados
Lista <- list(Probs = c(p_1, p_2, p_3), Precio = Precio, Factores = c(u, h, d), Metodo = "Trinomial-Tian 2")
# Mostrar resultados
Lista
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Determinando Delta de t y omega
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
# Determinando M y V
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
# Determinando Zetas
Zeta_2 <- sqrt((Omega^2 - 1) * (Omega + 2 * sqrt(Omega) + 3))
# Factores de crecimiento, decrecimiento y h
h <- M * Omega * sqrt(Omega)
u <- (h / 2) * ((Omega + 1) * (sqrt(Omega) + 1) - 2 + Zeta_2)
d <- (h / 2) * ((Omega + 1) * (sqrt(Omega) + 1) - 2 - Zeta_2)
# Determinando las probabilidades neutrales al riesgo
alpha <- 1 / (h - M * Omega)
p1 <- ((Omega + sqrt(Omega) + 1) * d - M * Omega) / ((u - d) * (u - h) * Omega * alpha)
p2 <- ((sqrt(Omega) + 1)^2) / (Omega^2 * (Omega + 2 * sqrt(Omega) + 3))
p3 <- ((Omega + sqrt(Omega) + 1) * u - M * Omega) / ((u - d) * (h - d) * Omega * alpha)
# Determinando b, p estrellas y thetas
b <- floor((n * log(u) + log(St / k)) / (log(u / d)))
p1. <- (p1 * u) / (exp(rf * Delta))
p2. <- (p2 * h) / (exp(rf * Delta))
p3. <- (p3 * d) / (exp(rf * Delta))
theta_2 <- p2 / (p1 + p2)
theta2. <- p2. / (p1. + p2.)
# Calcular el precio de la call
Termino1 <- 0
Termino2 <- 0
for (x in 0:round(b)) {
Termino1 <- Termino1 + choose(n, x) * (p3.)^x * (p1. + p2.)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2.)
}
for (x in 0:round(b)) {
Termino2 <- Termino2 + choose(n, x) * (p3)^x * (p1 + p2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta_2)
}
C <- St * Termino1 - (k / exp(rf * tau)) * Termino2
p1
p2
p3
C
u
h
# Parámetros
St <- 100  # Precio actual de la acción
tau <- 4 / 12  # Tiempo hasta el vencimiento en años (4 meses)
rf <- 0.05  # Tasa libre de riesgo anual
sigma <- 0.3  # Volatilidad anual
k <- 100  # Precio de ejercicio de la opción
n <- 10  # Número de pasos en el árbol binomial
# Determinando Delta de t y omega
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
# Determinando M y V
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
# Determinando Zetas
Zeta_2 <- sqrt((Omega^2 - 1) * (Omega + 2 * sqrt(Omega) + 3))
# Factores de crecimiento, decrecimiento y h
h <- M * Omega * sqrt(Omega)
u <- (h / 2) * ((Omega + 1) * (sqrt(Omega) + 1) - 2 + Zeta_2)
d <- (h / 2) * ((Omega + 1) * (sqrt(Omega) + 1) - 2 - Zeta_2)
# Determinando las probabilidades neutrales al riesgo
alpha <- 1 / (h - M * Omega)
p1 <- ((Omega + sqrt(Omega) + 1) * d - M * Omega) / ((u - d) * (u - h) * Omega * alpha)
p2 <- ((sqrt(Omega) + 1)^2) / (Omega^2 * (Omega + 2 * sqrt(Omega) + 3))
p3 <- ((Omega + sqrt(Omega) + 1) * u - M * Omega) / ((u - d) * (h - d) * Omega * alpha)
# Determinando b, p estrellas y thetas
b <- floor((n * log(u) + log(St / k)) / (log(u / d)))
p1. <- (p1 * u) / (exp(rf * Delta))
p2. <- (p2 * h) / (exp(rf * Delta))
p3. <- (p3 * d) / (exp(rf * Delta))
theta_2 <- p2 / (p1 + p2)
theta2. <- p2. / (p1. + p2.)
# Calcular el precio de la call
Termino1 <- 0
Termino2 <- 0
for (x in 0:round(b)) {
Termino1 <- Termino1 + choose(n, x) * (p3.)^x * (p1. + p2.)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2.)
}
for (x in 0:round(b)) {
Termino2 <- Termino2 + choose(n, x) * (p3)^x * (p1 + p2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta_2)
}
C <- St * Termino1 - (k / exp(rf * tau)) * Termino2
p1
p2
p3
C
u
h
# Determinando Delta de t y omega
Delta <- tau / n
Omega <- exp(sigma^2 * Delta)
# Determinando M y V
M <- exp(rf * Delta)
V <- M^2 * (Omega - 1)
# Determinando Zetas
Zeta_1 <- sqrt((Omega - 1) * (Omega + 2) * (Omega^2 + Omega + 2))
# Factores de crecimiento, decrecimiento y h
h <- M * Omega^2
u <- (h / 2) * ((Omega + 1) * Omega + Zeta_1)
d <- (h / 2) * ((Omega + 1) * Omega - Zeta_1)
# Determinando las probabilidades neutrales al riesgo
p_1 <- ((Omega + 1) * d - M * Omega) / (Omega^2 * (Omega + 2) * (u + h))
p_2 <- (Omega + 1) / (Omega^3 * (Omega + 2))
p_3 <- ((Omega + 1) * u - M * Omega) / (Omega^2 * (Omega + 2) * (h + d))
# Determinando b, p estrellas y thetas
b <- floor((n * log(u) + log(St / k)) / (log(u / d)))
p1_est <- (p_1 * u) / (exp(rf * Delta))
p2_est <- (p_2 * h) / (exp(rf * Delta))
p3_est <- (p_3 * d) / (exp(rf * Delta))
theta_2 <- p_2 / (p_1 + p_2)
theta2_est <- p2_est / (p1_est + p2_est)
# Calcular el precio de la call
Termino1 <- 0
Termino2 <- 0
for (x in 0:floor(b)) {
Termino1 <- Termino1 + choose(n, x) * (p3_est)^x * (p1_est + p2_est)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta2_est)
}
for (x in 0:floor(b)) {
Termino2 <- Termino2 + choose(n, x) * (p_3)^x * (p_1 + p_2)^(n - x) * pbinom(floor(2 * b) - 2 * x, n - x, theta_2)
}
C <- St * Termino1 - (k / exp(rf * tau)) * Termino2
p1
p2
p3
C
u
h
